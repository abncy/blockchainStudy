{
  "contractName": "PayVote",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "Choose",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "JudgeOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint8",
          "name": "stationNumber",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        }
      ],
      "name": "PriceBetween",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "VoteNum",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "addCrowd",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "clearCrowDensity",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "StartToMidNum",
          "type": "uint256"
        }
      ],
      "name": "coolTimeCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "cooldownTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cooldownTimeView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "CrowdDensity",
          "type": "uint32"
        }
      ],
      "name": "createStaion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "getStaion",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getStaionNum",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "levelview",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stations",
      "outputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "level",
          "type": "uint8"
        },
        {
          "internalType": "uint32",
          "name": "CrowdDensity",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "subCrowd",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "updateLevel",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "id",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "StartToMidNum",
          "type": "uint256"
        }
      ],
      "name": "GetVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoteN",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "ChooseStation",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"Choose\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"ChooseStation\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"StartToMidNum\",\"type\":\"uint256\"}],\"name\":\"GetVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"JudgeOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"stationNumber\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"PriceBetween\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"VoteNum\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"addCrowd\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"clearCrowDensity\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"StartToMidNum\",\"type\":\"uint256\"}],\"name\":\"coolTimeCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"cooldownTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"cooldownTimeView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"CrowdDensity\",\"type\":\"uint32\"}],\"name\":\"createStaion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"getStaion\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getStaionNum\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVoteN\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"levelview\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stations\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"level\",\"type\":\"uint8\"},{\"internalType\":\"uint32\",\"name\":\"CrowdDensity\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"subCrowd\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"updateLevel\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/D/blockChain/TrainDiversionSystem/contracts/payVote.sol\":\"PayVote\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/D/blockChain/TrainDiversionSystem/contracts/Context.sol\":{\"keccak256\":\"0x37dc42902efc7989706ffda571ab420f0996a264641ca19c4013c4c267fa083e\",\"urls\":[\"bzz-raw://f165415343a5e04282dd155221fbbaa2f30010016556da422c139509d6abdf3d\",\"dweb:/ipfs/QmY5JGt78QvuEboDrxxvKXjEbzsa3hx1RyKouxoEm8sxSz\"]},\"/D/blockChain/TrainDiversionSystem/contracts/LightRail.sol\":{\"keccak256\":\"0xb67c939255240bea0f00b87a486a8a6b88240a6b0a4f5ffbfd25b947521a77a1\",\"urls\":[\"bzz-raw://b09718304156bd2aebd4c9d56ab856837b5259676e5a2fec5b5277666f1375f2\",\"dweb:/ipfs/QmWyjiJ48gSG5NuusnjzwWRVbqcJZqQ5zpXKSRVsR9xcBY\"]},\"/D/blockChain/TrainDiversionSystem/contracts/ownable.sol\":{\"keccak256\":\"0x04c6e3c248e73934c1d7c698470096fe1750f953eee971c60bdf009d7e747e19\",\"urls\":[\"bzz-raw://94f3693b2844c507f8cae70ab0e79050aa527ba8d9c14c32fd8e309df4b419d3\",\"dweb:/ipfs/QmYRHkCB4HiKQsieBaj4VTiRKdfCwzrJG4XKoU8CQFbo9V\"]},\"/D/blockChain/TrainDiversionSystem/contracts/payVote.sol\":{\"keccak256\":\"0x91eaf237e279149f0e31a460b837f3227921a1d72c2735862bfc6523f9b47910\",\"urls\":[\"bzz-raw://2c386a70fddf5d7f9237d48849d5c443a65e1aada02d254c412945b5db5029a4\",\"dweb:/ipfs/QmRyRpS98w1X9fnjw4eiHRWX8FBF3PTnTUMQhEUFAgxstj\"]},\"/D/blockChain/TrainDiversionSystem/contracts/safemath.sol\":{\"keccak256\":\"0xee9788e0f8ae1844de5383c6eff54ee3583fbb407c0b9df470a5d21838b17267\",\"urls\":[\"bzz-raw://f4b13be3fff00eae0b60dd810f165b7cbf260ae16c40bd3dd0ac226747568861\",\"dweb:/ipfs/QmYsiX6qJJ3JCHyRexDeFdvcsaJTXCgBVCLRaT7V6vbGpJ\"]}},\"version\":1}",
  "bytecode": "0x60806040526100126100d260201b60201c565b6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36100da565b600033905090565b611e5d806100e96000396000f3fe6080604052600436106101405760003560e01c806354f7bc6f116100b657806392f859db1161006f57806392f859db14610742578063a9a5dd4114610816578063c3b5db9114610882578063c7d696cf146108d1578063ccb83b351461093e578063f2fde38b146109a957610140565b806354f7bc6f146105e6578063715018a61461061557806384890fc21461062c5780638da5cb5b146106675780638f32d59b146106be57806392e0150b146106ed57610140565b806322585e5a1161010857806322585e5a146104335780632e3f71a9146104885780633308c443146104b9578063428904ab1461051f57806344486af81461054a57806347f8c5bf146105af57610140565b8063037cf65114610145578063082034a6146102c35780630fb1f0e6146102ee57806311a9593f146103255780631cd3478814610400575b600080fd5b34801561015157600080fd5b506102286004803603606081101561016857600080fd5b810190808035906020019064010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460018302840111640100000000831117156101b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803563ffffffff1690602001909291905050506109fa565b60405180806020018460ff1660ff1681526020018363ffffffff1663ffffffff168152602001828103825285818151815260200191508051906020019080838360005b8381101561028657808201518184015260208101905061026b565b50505050905090810190601f1680156102b35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102cf57600080fd5b506102d8610c6c565b6040518082815260200191505060405180910390f35b3480156102fa57600080fd5b50610303610cb3565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561033157600080fd5b5061035e6004803603602081101561034857600080fd5b8101908080359060200190929190505050610dc6565b60405180806020018560ff1660ff1681526020018463ffffffff1663ffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156103c25780820151818401526020810190506103a7565b50505050905090810190601f1680156103ef5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561040c57600080fd5b50610415610ef2565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561043f57600080fd5b5061046c6004803603602081101561045657600080fd5b8101908080359060200190929190505050610f47565b604051808260ff1660ff16815260200191505060405180910390f35b34801561049457600080fd5b5061049d610f7c565b604051808260ff1660ff16815260200191505060405180910390f35b6104fc600480360360608110156104cf57600080fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190505050610fd0565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b34801561052b57600080fd5b50610534611196565b6040518082815260200191505060405180910390f35b34801561055657600080fd5b506105996004803603602081101561056d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a8565b6040518082815260200191505060405180910390f35b3480156105bb57600080fd5b506105c46111c0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156105f257600080fd5b506105fb6112d3565b604051808215151515815260200191505060405180910390f35b34801561062157600080fd5b5061062a611356565b005b34801561063857600080fd5b506106656004803603602081101561064f57600080fd5b810190808035906020019092919050505061148f565b005b34801561067357600080fd5b5061067c61156b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ca57600080fd5b506106d3611594565b604051808215151515815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506115f2565b604051808260ff1660ff16815260200191505060405180910390f35b34801561074e57600080fd5b5061077b6004803603602081101561076557600080fd5b81019080803590602001909291905050506117d2565b60405180806020018460ff1660ff1681526020018363ffffffff1663ffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156107d95780820151818401526020810190506107be565b50505050905090810190601f1680156108065780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561082257600080fd5b5061085f6004803603604081101561083957600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506118be565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b34801561088e57600080fd5b506108bb600480360360208110156108a557600080fd5b8101908080359060200190929190505050611a54565b6040518082815260200191505060405180910390f35b3480156108dd57600080fd5b50610920600480360360208110156108f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae8565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561094a57600080fd5b5061098d6004803603602081101561096157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b09565b604051808260ff1660ff16815260200191505060405180910390f35b3480156109b557600080fd5b506109f8600480360360208110156109cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b29565b005b6060600080610a07611594565b610a79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000610b4560018060405180606001604052808b81526020018a60ff1681526020018963ffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610aec929190611d5d565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548163ffffffff021916908363ffffffff1602179055505050611baf90919063ffffffff16565b905060018181548110610b5457fe5b906000526020600020906002020160000160018281548110610b7257fe5b906000526020600020906002020160010160009054906101000a900460ff1660018381548110610b9e57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b505050505092509350935093505093509350939050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050610d4f6001808360ff1681548110610d1957fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16611bc690919063ffffffff16565b60018260ff1681548110610d5f57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff16021790555060018160ff1681548110610d9e57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1691505090565b6060600080600060018581548110610dda57fe5b906000526020600020906002020160000160018681548110610df857fe5b906000526020600020906002020160010160009054906101000a900460ff1660018781548110610e2457fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1687838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610edc5780601f10610eb157610100808354040283529160200191610edc565b820191906000526020600020905b815481529060010190602001808311610ebf57829003601f168201915b5050505050935093509350935093509193509193565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16905090565b600060018281548110610f5657fe5b906000526020600020906002020160010160009054906101000a900460ff169050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600080843414610fdf57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff161461103d57600080fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1601600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555061114883611a54565b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548491509150935093915050565b60008060018054905090508091505090565b60026020528060005260406000206000915090505481565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905061125c6001808360ff168154811061122657fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16611be990919063ffffffff16565b60018260ff168154811061126c57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff16021790555060018160ff16815481106112ab57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1691505090565b60006112dd611594565b61134f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001905090565b61135e611594565b6113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611497611594565b611509576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b818160ff161161156757600060018260ff168154811061152b57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff160217905550808060010191505061150f565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115d6611c11565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060506001838154811061160357fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff161161166d5760006001838154811061163f57fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff16021790555061179f565b60506001838154811061167c57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff161180156116e6575060c8600183815481106116bb57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff1611155b156117275760018083815481106116f957fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff16021790555061179e565b60c86001838154811061173657fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16111561179d5760026001838154811061177357fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff1602179055505b5b5b600182815481106117ac57fe5b906000526020600020906002020160010160009054906101000a900460ff169050919050565b600181815481106117df57fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561188b5780601f106118605761010080835404028352916020019161188b565b820191906000526020600020905b81548152906001019060200180831161186e57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900463ffffffff16905083565b6000806000809050600080905060008090508660ff166000111580156118e8575060058760ff1611155b156118fc5766038d7ea4c680009150611967565b60058760ff16118015611913575060108760ff1611155b1561192757660e35fa931a00009150611966565b60108760ff1611156119655760108703965066038d7ea4c680006001600a8960ff168161195057fe5b060260040160ff160266ffffffffffffff1691505b5b5b600060018760ff168154811061197957fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff1614156119b05766038d7ea4c680009050611a3f565b6001808760ff16815481106119c157fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff1614156119f85766071afd498d00009050611a3e565b600260018760ff1681548110611a0a57fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff161415611a3d57660e35fa931a000090505b5b5b81810192508286945094505050509250929050565b600061ea606005830202600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900461ffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b611b31611594565b611ba3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611bac81611c19565b50565b600082821115611bbb57fe5b818303905092915050565b60008263ffffffff168263ffffffff161115611bde57fe5b818303905092915050565b60008082840190508363ffffffff168163ffffffff161015611c0757fe5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611e036026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d9e57805160ff1916838001178555611dcc565b82800160010185558215611dcc579182015b82811115611dcb578251825591602001919060010190611db0565b5b509050611dd99190611ddd565b5090565b611dff91905b80821115611dfb576000816000905550600101611de3565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820a53f0888076d72c7970465ed8febb9403e024fb2bf5cd3251e46e86256f842f864736f6c63430005100032",
  "deployedBytecode": "0x6080604052600436106101405760003560e01c806354f7bc6f116100b657806392f859db1161006f57806392f859db14610742578063a9a5dd4114610816578063c3b5db9114610882578063c7d696cf146108d1578063ccb83b351461093e578063f2fde38b146109a957610140565b806354f7bc6f146105e6578063715018a61461061557806384890fc21461062c5780638da5cb5b146106675780638f32d59b146106be57806392e0150b146106ed57610140565b806322585e5a1161010857806322585e5a146104335780632e3f71a9146104885780633308c443146104b9578063428904ab1461051f57806344486af81461054a57806347f8c5bf146105af57610140565b8063037cf65114610145578063082034a6146102c35780630fb1f0e6146102ee57806311a9593f146103255780631cd3478814610400575b600080fd5b34801561015157600080fd5b506102286004803603606081101561016857600080fd5b810190808035906020019064010000000081111561018557600080fd5b82018360208201111561019757600080fd5b803590602001918460018302840111640100000000831117156101b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803560ff169060200190929190803563ffffffff1690602001909291905050506109fa565b60405180806020018460ff1660ff1681526020018363ffffffff1663ffffffff168152602001828103825285818151815260200191508051906020019080838360005b8381101561028657808201518184015260208101905061026b565b50505050905090810190601f1680156102b35780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b3480156102cf57600080fd5b506102d8610c6c565b6040518082815260200191505060405180910390f35b3480156102fa57600080fd5b50610303610cb3565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b34801561033157600080fd5b5061035e6004803603602081101561034857600080fd5b8101908080359060200190929190505050610dc6565b60405180806020018560ff1660ff1681526020018463ffffffff1663ffffffff168152602001838152602001828103825286818151815260200191508051906020019080838360005b838110156103c25780820151818401526020810190506103a7565b50505050905090810190601f1680156103ef5780820380516001836020036101000a031916815260200191505b509550505050505060405180910390f35b34801561040c57600080fd5b50610415610ef2565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561043f57600080fd5b5061046c6004803603602081101561045657600080fd5b8101908080359060200190929190505050610f47565b604051808260ff1660ff16815260200191505060405180910390f35b34801561049457600080fd5b5061049d610f7c565b604051808260ff1660ff16815260200191505060405180910390f35b6104fc600480360360608110156104cf57600080fd5b8101908080359060200190929190803560ff16906020019092919080359060200190929190505050610fd0565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b34801561052b57600080fd5b50610534611196565b6040518082815260200191505060405180910390f35b34801561055657600080fd5b506105996004803603602081101561056d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506111a8565b6040518082815260200191505060405180910390f35b3480156105bb57600080fd5b506105c46111c0565b604051808263ffffffff1663ffffffff16815260200191505060405180910390f35b3480156105f257600080fd5b506105fb6112d3565b604051808215151515815260200191505060405180910390f35b34801561062157600080fd5b5061062a611356565b005b34801561063857600080fd5b506106656004803603602081101561064f57600080fd5b810190808035906020019092919050505061148f565b005b34801561067357600080fd5b5061067c61156b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156106ca57600080fd5b506106d3611594565b604051808215151515815260200191505060405180910390f35b3480156106f957600080fd5b506107266004803603602081101561071057600080fd5b81019080803590602001909291905050506115f2565b604051808260ff1660ff16815260200191505060405180910390f35b34801561074e57600080fd5b5061077b6004803603602081101561076557600080fd5b81019080803590602001909291905050506117d2565b60405180806020018460ff1660ff1681526020018363ffffffff1663ffffffff168152602001828103825285818151815260200191508051906020019080838360005b838110156107d95780820151818401526020810190506107be565b50505050905090810190601f1680156108065780820380516001836020036101000a031916815260200191505b5094505050505060405180910390f35b34801561082257600080fd5b5061085f6004803603604081101561083957600080fd5b81019080803560ff169060200190929190803560ff1690602001909291905050506118be565b604051808381526020018260ff1660ff1681526020019250505060405180910390f35b34801561088e57600080fd5b506108bb600480360360208110156108a557600080fd5b8101908080359060200190929190505050611a54565b6040518082815260200191505060405180910390f35b3480156108dd57600080fd5b50610920600480360360208110156108f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611ae8565b604051808261ffff1661ffff16815260200191505060405180910390f35b34801561094a57600080fd5b5061098d6004803603602081101561096157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b09565b604051808260ff1660ff16815260200191505060405180910390f35b3480156109b557600080fd5b506109f8600480360360208110156109cc57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611b29565b005b6060600080610a07611594565b610a79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6000610b4560018060405180606001604052808b81526020018a60ff1681526020018963ffffffff16815250908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820151816000019080519060200190610aec929190611d5d565b5060208201518160010160006101000a81548160ff021916908360ff16021790555060408201518160010160016101000a81548163ffffffff021916908363ffffffff1602179055505050611baf90919063ffffffff16565b905060018181548110610b5457fe5b906000526020600020906002020160000160018281548110610b7257fe5b906000526020600020906002020160010160009054906101000a900460ff1660018381548110610b9e57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff16828054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610c555780601f10610c2a57610100808354040283529160200191610c55565b820191906000526020600020905b815481529060010190602001808311610c3857829003601f168201915b505050505092509350935093505093509350939050565b6000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050610d4f6001808360ff1681548110610d1957fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16611bc690919063ffffffff16565b60018260ff1681548110610d5f57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff16021790555060018160ff1681548110610d9e57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1691505090565b6060600080600060018581548110610dda57fe5b906000526020600020906002020160000160018681548110610df857fe5b906000526020600020906002020160010160009054906101000a900460ff1660018781548110610e2457fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1687838054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610edc5780601f10610eb157610100808354040283529160200191610edc565b820191906000526020600020905b815481529060010190602001808311610ebf57829003601f168201915b5050505050935093509350935093509193509193565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff16905090565b600060018281548110610f5657fe5b906000526020600020906002020160010160009054906101000a900460ff169050919050565b6000600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905090565b600080843414610fdf57600080fd5b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1661ffff161461103d57600080fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900461ffff1601600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548161ffff021916908361ffff16021790555083600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908360ff16021790555061114883611a54565b50600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020548491509150935093915050565b60008060018054905090508091505090565b60026020528060005260406000206000915090505481565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905061125c6001808360ff168154811061122657fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16611be990919063ffffffff16565b60018260ff168154811061126c57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff16021790555060018160ff16815481106112ab57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1691505090565b60006112dd611594565b61134f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6001905090565b61135e611594565b6113d0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b611497611594565b611509576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008090505b818160ff161161156757600060018260ff168154811061152b57fe5b906000526020600020906002020160010160016101000a81548163ffffffff021916908363ffffffff160217905550808060010191505061150f565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166115d6611c11565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b600060506001838154811061160357fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff161161166d5760006001838154811061163f57fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff16021790555061179f565b60506001838154811061167c57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff161180156116e6575060c8600183815481106116bb57fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff1611155b156117275760018083815481106116f957fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff16021790555061179e565b60c86001838154811061173657fe5b906000526020600020906002020160010160019054906101000a900463ffffffff1663ffffffff16111561179d5760026001838154811061177357fe5b906000526020600020906002020160010160006101000a81548160ff021916908360ff1602179055505b5b5b600182815481106117ac57fe5b906000526020600020906002020160010160009054906101000a900460ff169050919050565b600181815481106117df57fe5b9060005260206000209060020201600091509050806000018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561188b5780601f106118605761010080835404028352916020019161188b565b820191906000526020600020905b81548152906001019060200180831161186e57829003601f168201915b5050505050908060010160009054906101000a900460ff16908060010160019054906101000a900463ffffffff16905083565b6000806000809050600080905060008090508660ff166000111580156118e8575060058760ff1611155b156118fc5766038d7ea4c680009150611967565b60058760ff16118015611913575060108760ff1611155b1561192757660e35fa931a00009150611966565b60108760ff1611156119655760108703965066038d7ea4c680006001600a8960ff168161195057fe5b060260040160ff160266ffffffffffffff1691505b5b5b600060018760ff168154811061197957fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff1614156119b05766038d7ea4c680009050611a3f565b6001808760ff16815481106119c157fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff1614156119f85766071afd498d00009050611a3e565b600260018760ff1681548110611a0a57fe5b906000526020600020906002020160010160009054906101000a900460ff1660ff161415611a3d57660e35fa931a000090505b5b5b81810192508286945094505050509250929050565b600061ea606005830202600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60046020528060005260406000206000915054906101000a900461ffff1681565b60036020528060005260406000206000915054906101000a900460ff1681565b611b31611594565b611ba3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611bac81611c19565b50565b600082821115611bbb57fe5b818303905092915050565b60008263ffffffff168263ffffffff161115611bde57fe5b818303905092915050565b60008082840190508363ffffffff168163ffffffff161015611c0757fe5b8091505092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611c9f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180611e036026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10611d9e57805160ff1916838001178555611dcc565b82800160010185558215611dcc579182015b82811115611dcb578251825591602001919060010190611db0565b5b509050611dd99190611ddd565b5090565b611dff91905b80821115611dfb576000816000905550600101611de3565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820a53f0888076d72c7970465ed8febb9403e024fb2bf5cd3251e46e86256f842f864736f6c63430005100032",
  "sourceMap": "59:719:6:-;;;723:12:5;:10;;;:12;;:::i;:::-;714:6;;:21;;;;;;;;;;;;;;;;;;784:6;;;;;;;;;;;751:40;;780:1;751:40;;;;;;;;;;;;59:719:6;;806:98:1;851:15;886:10;879:17;;806:98;:::o;59:719:6:-;;;;;;;",
  "deployedSourceMap": "59:719:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:485:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;854:485:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;854:485:2;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;854:485:2;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;854:485:2;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;854:485:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;854:485:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;854:485:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2406:108;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2406:108:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2801:206;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2801:206:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1532:345;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1532:345:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1532:345:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1532:345:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;567:94:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;567:94:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3050:103:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3050:103:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3050:103:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;669:97:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;669:97:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;153:397;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;153:397:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1367:125:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1367:125:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;564:47;;8:9:-1;5:2;;;30:1;27;20:12;5:2;564:47:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;564:47:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2557:236;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2557:236:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;734:89;;8:9:-1;5:2;;;30:1;27;20:12;5:2;734:89:2;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1691:140:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1691:140:5;;;:::i;:::-;;1928:176:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1928:176:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1928:176:2;;;;;;;;;;;;;;;;;:::i;:::-;;880:79:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;880:79:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1246:94;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:94:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3246:439:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3246:439:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3246:439:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;498:25;;8:9:-1;5:2;;;30:1;27;20:12;5:2;498:25:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;498:25:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;498:25:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3724:1011;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3724:1011:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3724:1011:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2147:251;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2147:251:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2147:251:2;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;96:41:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;96:41:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;96:41:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;686:39:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;686:39:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;686:39:2;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1986:109:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1986:109:5;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1986:109:5;;;;;;;;;;;;;;;;;;;:::i;:::-;;854:485:2;957:13;972:5;979:6;1092:9:5;:7;:9::i;:::-;1084:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1082:10:2;1095:57;1150:1;1095:8;1109:35;;;;;;;;1117:5;1109:35;;;;1124:5;1109:35;;;;;;1131:12;1109:35;;;;;1095:50;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1095:50:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:54;;:57;;;;:::i;:::-;1082:70;;1230:8;1239:2;1230:12;;;;;;;;;;;;;;;;;;:17;;1262:8;1271:2;1262:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1295:8;1304:2;1295:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1208:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;854:485;;;;;;;:::o;2406:108::-;2455:7;2482:12;:24;2495:10;2482:24;;;;;;;;;;;;;;;;2475:31;;2406:108;:::o;2801:206::-;2837:6;2856:8;2867:6;:18;2874:10;2867:18;;;;;;;;;;;;;;;;;;;;;;;;;2856:29;;2924:32;2954:1;2924:8;2933:2;2924:12;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:29;;;;:32;;;;:::i;:::-;2896:8;2905:2;2896:12;;;;;;;;;;;;;;;;;;;;:25;;;:60;;;;;;;;;;;;;;;;;;2974:8;2983:2;2974:12;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2967:32;;;2801:206;:::o;1532:345::-;1625:13;1653:5;1673:6;1694:7;1751:8;1760:2;1751:12;;;;;;;;;;;;;;;;;;:17;;1783:8;1792:2;1783:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;1816:8;1825:2;1816:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1856:2;1729:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1532:345;;;;;:::o;567:94:6:-;608:6;634:7;:19;642:10;634:19;;;;;;;;;;;;;;;;;;;;;;;;;627:26;;567:94;:::o;3050:103:2:-;3102:5;3127:8;3136:2;3127:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;3120:25;;3050:103;;;:::o;669:97:6:-;715:5;740:6;:18;747:10;740:18;;;;;;;;;;;;;;;;;;;;;;;;;733:25;;669:97;:::o;153:397::-;237:4;243:5;282;269:9;:18;261:27;;;;;;330:1;307:7;:19;315:10;307:19;;;;;;;;;;;;;;;;;;;;;;;;;:24;;;299:33;;;;;;387:1;365:7;:19;373:10;365:19;;;;;;;;;;;;;;;;;;;;;;;;;:23;343:7;:19;351:10;343:19;;;;;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;420:2;399:6;:18;406:10;399:18;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;;;;;;;467:28;481:13;467;:28::i;:::-;;513:12;:24;526:10;513:24;;;;;;;;;;;;;;;;539:2;506:36;;;;153:397;;;;;;:::o;1367:125:2:-;1412:7;1432:11;1446:8;:15;;;;1432:29;;1480:3;1472:12;;;1367:125;:::o;564:47::-;;;;;;;;;;;;;;;;;:::o;2557:236::-;2593:6;2642:8;2653:6;:18;2660:10;2653:18;;;;;;;;;;;;;;;;;;;;;;;;;2642:29;;2710:32;2740:1;2710:8;2719:2;2710:12;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:29;;;;:32;;;;:::i;:::-;2682:8;2691:2;2682:12;;;;;;;;;;;;;;;;;;;;:25;;;:60;;;;;;;;;;;;;;;;;;2760:8;2769:2;2760:12;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;2753:32;;;2557:236;:::o;734:89::-;787:4;1092:9:5;:7;:9::i;:::-;1084:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;811:4:2;804:11;;734:89;:::o;1691:140:5:-;1092:9;:7;:9::i;:::-;1084:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1790:1;1753:40;;1774:6;;;;;;;;;;;1753:40;;;;;;;;;;;;1821:1;1804:6;;:19;;;;;;;;;;;;;;;;;;1691:140::o;1928:176:2:-;1092:9:5;:7;:9::i;:::-;1084:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1999:11:2;2013:1;1999:15;;1994:103;2025:2;2016:5;:11;;;1994:103;;2084:1;2053:8;2062:5;2053:15;;;;;;;;;;;;;;;;;;;;:28;;;:32;;;;;;;;;;;;;;;;;;2029:7;;;;;;;1994:103;;;;1928:176;:::o;880:79:5:-;918:7;945:6;;;;;;;;;;;938:13;;880:79;:::o;1246:94::-;1286:4;1326:6;;;;;;;;;;;1310:22;;:12;:10;:12::i;:::-;:22;;;1303:29;;1246:94;:::o;3246:439:2:-;3295:5;3346:2;3317:8;3326:2;3317:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:31;;;3313:329;;3386:1;3365:8;3374:2;3365:12;;;;;;;;;;;;;;;;;;:18;;;:22;;;;;;;;;;;;;;;;;;3313:329;;;3451:2;3423:8;3432:2;3423:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:30;;;:66;;;;;3486:3;3457:8;3466:2;3457:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:32;;;;3423:66;3405:237;;;3537:1;3516:8;3525:2;3516:12;;;;;;;;;;;;;;;;;;:18;;;:22;;;;;;;;;;;;;;;;;;3405:237;;;3588:3;3560:8;3569:2;3560:12;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;:31;;;3556:86;;;3629:1;3608:8;3617:2;3608:12;;;;;;;;;;;;;;;;;;:18;;;:22;;;;;;;;;;;;;;;;;;3556:86;3405:237;3313:329;3659:8;3668:2;3659:12;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;3652:25;;3246:439;;;:::o;498:25::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3724:1011::-;3798:4;3804:5;3822:10;3835:1;3822:14;;3847:23;3873:1;3847:27;;3885:15;3903:1;3885:19;;3924:13;3919:18;;:1;:18;;:40;;;;;3958:1;3941:13;:18;;;;3919:40;3915:396;;;3997:11;3976:32;;3915:396;;;4070:1;4054:13;:17;;;:40;;;;;4092:2;4075:13;:19;;;;4054:40;4050:261;;;4132:11;4111:32;;4050:261;;;4181:2;4165:13;:18;;;4161:150;;;4217:2;4200:19;;;;4288:11;4284:1;4278:2;4262:13;:18;;;;;;;;4261:24;4256:1;:30;4255:44;;;4234:65;;;;4161:150;4050:261;3915:396;4349:1;4327:8;4336:2;4327:12;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:23;;;4323:326;;;4403:11;4389:25;;4323:326;;;4459:1;4437:8;4446:2;4437:12;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:23;;;4433:216;;;4512:14;4499:27;;4433:216;;;4570:1;4548:8;4557:2;4548:12;;;;;;;;;;;;;;;;;;;;:18;;;;;;;;;;;;:23;;;4544:105;;;4623:14;4610:27;;4544:105;4433:216;4323:326;4680:18;4667:10;:31;4659:39;;4717:5;4724:2;4709:18;;;;;;;3724:1011;;;;;:::o;2147:251::-;2209:7;2343:5;2340:1;2324:13;:17;:24;2297:12;:24;2310:10;2297:24;;;;;;;;;;;;;;;:51;;;;2366:12;:24;2379:10;2366:24;;;;;;;;;;;;;;;;2359:31;;2147:251;;;:::o;96:41:6:-;;;;;;;;;;;;;;;;;;;;;;:::o;686:39:2:-;;;;;;;;;;;;;;;;;;;;;;:::o;1986:109:5:-;1092:9;:7;:9::i;:::-;1084:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2059:28;2078:8;2059:18;:28::i;:::-;1986:109;:::o;868:113:7:-;926:7;954:1;949;:6;;942:14;;;;974:1;970;:5;963:12;;868:113;;;;:::o;1749:110::-;1805:6;1832:1;1827:6;;:1;:6;;;;1820:14;;;;1852:1;1848;:5;1841:12;;1749:110;;;;:::o;1865:129::-;1921:6;1936:8;1951:1;1947;:5;1936:16;;1971:1;1966:6;;:1;:6;;;;1959:14;;;;1987:1;1980:8;;;1865:129;;;;:::o;806:98:1:-;851:15;886:10;879:17;;806:98;:::o;2201:229:5:-;2295:1;2275:22;;:8;:22;;;;2267:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2385:8;2356:38;;2377:6;;;;;;;;;;;2356:38;;;;;;;;;;;;2414:8;2405:6;;:17;;;;;;;;;;;;;;;;;;2201:229;:::o;59:719:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.10;\r\n\r\nimport \"./LightRail.sol\";\r\n\r\n\r\ncontract PayVote is LightRail {\r\n    mapping(address => uint16) public VoteNum;\r\n   \r\n\r\n\r\n    function GetVote(uint price,uint8 id,uint256 StartToMidNum) public payable returns (uint, uint8) {\r\n        require(msg.value == price);\r\n        require(VoteNum[msg.sender] == 0);\r\n        VoteNum[msg.sender] = VoteNum[msg.sender] + 1;\r\n        Choose[msg.sender] = id; //记录站点序号,一人一票\r\n        coolTimeCount(StartToMidNum);\r\n        return(cooldownTime[msg.sender], id);\r\n    } //买票\r\n\r\n    function getVoteN() public view returns (uint16) {\r\n        return VoteNum[msg.sender];\r\n    }\r\n\r\n    function ChooseStation() public view returns (uint8) {\r\n        return Choose[msg.sender];\r\n    } //溯源\r\n}\r\n",
  "sourcePath": "D:/blockChain/TrainDiversionSystem/contracts/payVote.sol",
  "ast": {
    "absolutePath": "/D/blockChain/TrainDiversionSystem/contracts/payVote.sol",
    "exportedSymbols": {
      "PayVote": [
        832
      ]
    },
    "id": 833,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 742,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/D/blockChain/TrainDiversionSystem/contracts/LightRail.sol",
        "file": "./LightRail.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 833,
        "sourceUnit": 538,
        "src": "28:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 744,
              "name": "LightRail",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 537,
              "src": "79:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LightRail_$537",
                "typeString": "contract LightRail"
              }
            },
            "id": 745,
            "nodeType": "InheritanceSpecifier",
            "src": "79:9:6"
          }
        ],
        "contractDependencies": [
          74,
          537,
          740
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 832,
        "linearizedBaseContracts": [
          832,
          537,
          740,
          74
        ],
        "name": "PayVote",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 749,
            "name": "VoteNum",
            "nodeType": "VariableDeclaration",
            "scope": 832,
            "src": "96:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
              "typeString": "mapping(address => uint16)"
            },
            "typeName": {
              "id": 748,
              "keyType": {
                "id": 746,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "104:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                "typeString": "mapping(address => uint16)"
              },
              "valueType": {
                "id": 747,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "115:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "250:300:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "269:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "269:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 765,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "282:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "269:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1987,
                        1988
                      ],
                      "referencedDeclaration": 1987,
                      "src": "261:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "261:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "VoteNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "307:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                              "typeString": "mapping(address => uint16)"
                            }
                          },
                          "id": 773,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 771,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1984,
                              "src": "315:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "315:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "307:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "330:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "307:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1987,
                        1988
                      ],
                      "referencedDeclaration": 1987,
                      "src": "299:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "299:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "VoteNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "343:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                          "typeString": "mapping(address => uint16)"
                        }
                      },
                      "id": 781,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "351:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "343:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "VoteNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 749,
                          "src": "365:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                            "typeString": "mapping(address => uint16)"
                          }
                        },
                        "id": 785,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "373:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "387:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "365:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "343:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "343:45:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "Choose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "399:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 793,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "406:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "406:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "399:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 794,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "420:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "399:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "399:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 798,
                        "name": "StartToMidNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "481:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 797,
                      "name": "coolTimeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "467:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "467:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "467:28:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 801,
                          "name": "cooldownTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "513:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 804,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 802,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "526:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "526:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "513:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 805,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "539:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 806,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "512:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 761,
                  "id": 807,
                  "nodeType": "Return",
                  "src": "506:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "170:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "181:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "name": "StartToMidNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "190:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "169:43:6"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "237:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "243:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "236:13:6"
            },
            "scope": 832,
            "src": "153:397:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "616:45:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "VoteNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "634:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                        "typeString": "mapping(address => uint16)"
                      }
                    },
                    "id": 817,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "642:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "642:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "634:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "627:26:6"
                }
              ]
            },
            "documentation": null,
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVoteN",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:2:6"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "608:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:8:6"
            },
            "scope": 832,
            "src": "567:94:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "722:44:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "Choose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "740:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                        "typeString": "mapping(address => uint8)"
                      }
                    },
                    "id": 828,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 826,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "747:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "747:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 824,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "733:25:6"
                }
              ]
            },
            "documentation": null,
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ChooseStation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:6"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "715:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "714:7:6"
            },
            "scope": 832,
            "src": "669:97:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 833,
        "src": "59:719:6"
      }
    ],
    "src": "0:780:6"
  },
  "legacyAST": {
    "absolutePath": "/D/blockChain/TrainDiversionSystem/contracts/payVote.sol",
    "exportedSymbols": {
      "PayVote": [
        832
      ]
    },
    "id": 833,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 742,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "/D/blockChain/TrainDiversionSystem/contracts/LightRail.sol",
        "file": "./LightRail.sol",
        "id": 743,
        "nodeType": "ImportDirective",
        "scope": 833,
        "sourceUnit": 538,
        "src": "28:25:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 744,
              "name": "LightRail",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 537,
              "src": "79:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_LightRail_$537",
                "typeString": "contract LightRail"
              }
            },
            "id": 745,
            "nodeType": "InheritanceSpecifier",
            "src": "79:9:6"
          }
        ],
        "contractDependencies": [
          74,
          537,
          740
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 832,
        "linearizedBaseContracts": [
          832,
          537,
          740,
          74
        ],
        "name": "PayVote",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 749,
            "name": "VoteNum",
            "nodeType": "VariableDeclaration",
            "scope": 832,
            "src": "96:41:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
              "typeString": "mapping(address => uint16)"
            },
            "typeName": {
              "id": 748,
              "keyType": {
                "id": 746,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "104:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "96:26:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                "typeString": "mapping(address => uint16)"
              },
              "valueType": {
                "id": 747,
                "name": "uint16",
                "nodeType": "ElementaryTypeName",
                "src": "115:6:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint16",
                  "typeString": "uint16"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 808,
              "nodeType": "Block",
              "src": "250:300:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 763,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "269:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "269:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 765,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 751,
                          "src": "282:5:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "269:18:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 762,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1987,
                        1988
                      ],
                      "referencedDeclaration": 1987,
                      "src": "261:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "261:27:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 768,
                  "nodeType": "ExpressionStatement",
                  "src": "261:27:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 775,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 770,
                            "name": "VoteNum",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "307:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                              "typeString": "mapping(address => uint16)"
                            }
                          },
                          "id": 773,
                          "indexExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 771,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1984,
                              "src": "315:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 772,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "315:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "307:19:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "330:1:6",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "307:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 769,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1987,
                        1988
                      ],
                      "referencedDeclaration": 1987,
                      "src": "299:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "299:33:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 777,
                  "nodeType": "ExpressionStatement",
                  "src": "299:33:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 778,
                        "name": "VoteNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "343:7:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                          "typeString": "mapping(address => uint16)"
                        }
                      },
                      "id": 781,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 779,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "351:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "343:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "id": 787,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 782,
                          "name": "VoteNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 749,
                          "src": "365:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                            "typeString": "mapping(address => uint16)"
                          }
                        },
                        "id": 785,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 783,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "373:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "373:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "365:19:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "387:1:6",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "365:23:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "src": "343:45:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "id": 789,
                  "nodeType": "ExpressionStatement",
                  "src": "343:45:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 790,
                        "name": "Choose",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 111,
                        "src": "399:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                          "typeString": "mapping(address => uint8)"
                        }
                      },
                      "id": 793,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 791,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1984,
                          "src": "406:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "406:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "399:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 794,
                      "name": "id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 753,
                      "src": "420:2:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "399:23:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 796,
                  "nodeType": "ExpressionStatement",
                  "src": "399:23:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 798,
                        "name": "StartToMidNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 755,
                        "src": "481:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 797,
                      "name": "coolTimeCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 261,
                      "src": "467:13:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "467:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 800,
                  "nodeType": "ExpressionStatement",
                  "src": "467:28:6"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 801,
                          "name": "cooldownTime",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 107,
                          "src": "513:12:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 804,
                        "indexExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 802,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1984,
                            "src": "526:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "526:10:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "513:24:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 805,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 753,
                        "src": "539:2:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "id": 806,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "512:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint8_$",
                      "typeString": "tuple(uint256,uint8)"
                    }
                  },
                  "functionReturnParameters": 761,
                  "id": 807,
                  "nodeType": "Return",
                  "src": "506:36:6"
                }
              ]
            },
            "documentation": null,
            "id": 809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GetVote",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 751,
                  "name": "price",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "170:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 750,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 753,
                  "name": "id",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "181:8:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 752,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "181:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 755,
                  "name": "StartToMidNum",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "190:21:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 754,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "190:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "169:43:6"
            },
            "returnParameters": {
              "id": 761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 758,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "237:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 757,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "237:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 760,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 809,
                  "src": "243:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 759,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "243:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "236:13:6"
            },
            "scope": 832,
            "src": "153:397:6",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 819,
              "nodeType": "Block",
              "src": "616:45:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 814,
                      "name": "VoteNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "634:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint16_$",
                        "typeString": "mapping(address => uint16)"
                      }
                    },
                    "id": 817,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 815,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "642:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "642:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "634:19:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "functionReturnParameters": 813,
                  "id": 818,
                  "nodeType": "Return",
                  "src": "627:26:6"
                }
              ]
            },
            "documentation": null,
            "id": 820,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVoteN",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:2:6"
            },
            "returnParameters": {
              "id": 813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 812,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 820,
                  "src": "608:6:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 811,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "607:8:6"
            },
            "scope": 832,
            "src": "567:94:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 830,
              "nodeType": "Block",
              "src": "722:44:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 825,
                      "name": "Choose",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 111,
                      "src": "740:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint8_$",
                        "typeString": "mapping(address => uint8)"
                      }
                    },
                    "id": 828,
                    "indexExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 826,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1984,
                        "src": "747:3:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "747:10:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "740:18:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "functionReturnParameters": 824,
                  "id": 829,
                  "nodeType": "Return",
                  "src": "733:25:6"
                }
              ]
            },
            "documentation": null,
            "id": 831,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "ChooseStation",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "691:2:6"
            },
            "returnParameters": {
              "id": 824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 823,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 831,
                  "src": "715:5:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 822,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:5:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "714:7:6"
            },
            "scope": 832,
            "src": "669:97:6",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 833,
        "src": "59:719:6"
      }
    ],
    "src": "0:780:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event",
          "signature": "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0"
        }
      },
      "links": {},
      "address": "0x8D6728bc37e9a135ae7cBbBA446F95bda49cC506",
      "transactionHash": "0x2e50936a86a6625d4aa4b62624d6e5b93a431fbd7bc421f9c044e85c07a2ded8"
    }
  },
  "schemaVersion": "3.0.22",
  "updatedAt": "2020-06-12T15:16:41.384Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.      * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}